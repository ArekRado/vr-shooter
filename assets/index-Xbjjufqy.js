import{G as q,k as A,d2 as O,O as Y,s as L,r as y,ae as T,P as X,i,x as H,E as k,V as o,al as N,mg as x,f as m,n as z,Q as V,w as K,u as J,d0 as $,L as E,af as G,kL as ee,K as te,t as M,ed as se,ec as ie,ni as re,oM as ne}from"./index-WvC_7RLT.js";class B extends q{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}static _CreateArrow(e,s,t=1,r=!1){const n=new A("arrow",e),a=O("cylinder",{diameterTop:0,height:.075,diameterBottom:.0375*(1+(t-1)/4),tessellation:96},e),h=O("cylinder",{diameterTop:.005*t,height:.275,diameterBottom:.005*t,tessellation:96},e);return a.parent=n,a.material=s,a.rotation.x=Math.PI/2,a.position.z+=.3,h.parent=n,h.material=s,h.position.z+=.275/2,h.rotation.x=Math.PI/2,r&&(h.visibility=0,a.visibility=0),n}static _CreateArrowInstance(e,s){const t=new A("arrow",e);for(const r of s.getChildMeshes()){const n=r.createInstance(r.name);n.parent=t}return t}constructor(e,s=y.Gray(),t=H.DefaultUtilityLayer,r=null,n=1,a=y.Yellow(),h=y.Gray()){var f;super(t),this._pointerObserver=null,this.snapDistance=0,this.onSnapObservable=new Y,this._isEnabled=!0,this._parent=null,this._dragging=!1,this._parent=r,this._coloredMaterial=new L("",t.utilityLayerScene),this._coloredMaterial.diffuseColor=s,this._coloredMaterial.specularColor=s.subtract(new y(.1,.1,.1)),this._hoverMaterial=new L("",t.utilityLayerScene),this._hoverMaterial.diffuseColor=a,this._disableMaterial=new L("",t.utilityLayerScene),this._disableMaterial.diffuseColor=h,this._disableMaterial.alpha=.4;const l=B._CreateArrow(t.utilityLayerScene,this._coloredMaterial,n),_=B._CreateArrow(t.utilityLayerScene,this._coloredMaterial,n+4,!0);this._gizmoMesh=new T("",t.utilityLayerScene),this._gizmoMesh.addChild(l),this._gizmoMesh.addChild(_),this._gizmoMesh.lookAt(this._rootMesh.position.add(e)),this._gizmoMesh.scaling.scaleInPlace(1/3),this._gizmoMesh.parent=this._rootMesh;let c=0;const u={snapDistance:0};this.dragBehavior=new X({dragAxis:e}),this.dragBehavior.moveAttached=!1,this.dragBehavior.updateDragPlane=!1,this._rootMesh.addBehavior(this.dragBehavior),this.dragBehavior.onDragObservable.add(d=>{if(this.attachedNode){let b=!1;if(this.snapDistance==0)this.attachedNode.getWorldMatrix().getTranslationToRef(i.Vector3[2]),i.Vector3[2].addInPlace(d.delta),this.dragBehavior.validateDrag(i.Vector3[2])&&(this.attachedNode.position&&this.attachedNode.position.addInPlaceFromFloats(d.delta.x,d.delta.y,d.delta.z),this.attachedNode.getWorldMatrix().addTranslationFromFloats(d.delta.x,d.delta.y,d.delta.z),this.attachedNode.updateCache(),b=!0);else if(c+=d.dragDistance,Math.abs(c)>this.snapDistance){const C=Math.floor(Math.abs(c)/this.snapDistance);c=c%this.snapDistance,d.delta.normalizeToRef(i.Vector3[1]),i.Vector3[1].scaleInPlace(this.snapDistance*C),this.attachedNode.getWorldMatrix().getTranslationToRef(i.Vector3[2]),i.Vector3[2].addInPlace(i.Vector3[1]),this.dragBehavior.validateDrag(i.Vector3[2])&&(this.attachedNode.getWorldMatrix().addTranslationFromFloats(i.Vector3[1].x,i.Vector3[1].y,i.Vector3[1].z),this.attachedNode.updateCache(),u.snapDistance=this.snapDistance*C*Math.sign(c),this.onSnapObservable.notifyObservers(u),b=!0)}b&&this._matrixChanged()}}),this.dragBehavior.onDragStartObservable.add(()=>{this._dragging=!0}),this.dragBehavior.onDragEndObservable.add(()=>{this._dragging=!1});const g=t._getSharedGizmoLight();g.includedOnlyMeshes=g.includedOnlyMeshes.concat(this._rootMesh.getChildMeshes(!1));const p={gizmoMeshes:l.getChildMeshes(),colliderMeshes:_.getChildMeshes(),material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:this.dragBehavior};(f=this._parent)==null||f.addToAxisCache(_,p),this._pointerObserver=t.utilityLayerScene.onPointerObservable.add(d=>{var b;if(!this._customMeshSet&&(this._isHovered=p.colliderMeshes.indexOf((b=d==null?void 0:d.pickInfo)==null?void 0:b.pickedMesh)!=-1,!this._parent)){const C=this.dragBehavior.enabled?this._isHovered||this._dragging?this._hoverMaterial:this._coloredMaterial:this._disableMaterial;this._setGizmoMeshMaterial(p.gizmoMeshes,C)}}),this.dragBehavior.onEnabledObservable.add(d=>{this._setGizmoMeshMaterial(p.gizmoMeshes,d?p.material:p.disableMaterial)})}_attachedNodeChanged(e){this.dragBehavior&&(this.dragBehavior.enabled=!!e)}set isEnabled(e){this._isEnabled=e,e?this._parent&&(this.attachedMesh=this._parent.attachedMesh,this.attachedNode=this._parent.attachedNode):(this.attachedMesh=null,this.attachedNode=null)}get isEnabled(){return this._isEnabled}dispose(){this.onSnapObservable.clear(),this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.dragBehavior.detach(),this._gizmoMesh&&this._gizmoMesh.dispose(),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()}),super.dispose()}}class P{get scaleLines(){return this._scaleLines}set scaleLines(e){this._scaleLines=e,this._xAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._yAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._zAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor)}get xAxis(){return this._xAxis}get yAxis(){return this._yAxis}get zAxis(){return this._zAxis}constructor(e,s=1,t=2,r,n,a,h=1){if(this._scaleLinesFactor=4,this._instanced=!1,this.scene=null,this._scaleLines=1,e=e||k.LastCreatedScene,!!e){if(!r){const l=new L("xAxisMaterial",e);l.disableLighting=!0,l.emissiveColor=y.Red().scale(.5),r=B._CreateArrow(e,l,h)}if(!n){const l=new L("yAxisMaterial",e);l.disableLighting=!0,l.emissiveColor=y.Green().scale(.5),n=B._CreateArrow(e,l,h)}if(!a){const l=new L("zAxisMaterial",e);l.disableLighting=!0,l.emissiveColor=y.Blue().scale(.5),a=B._CreateArrow(e,l,h)}this._xAxis=r,this._yAxis=n,this._zAxis=a,this.scaleLines=s,t!=null&&(P._SetRenderingGroupId(this._xAxis,t),P._SetRenderingGroupId(this._yAxis,t),P._SetRenderingGroupId(this._zAxis,t)),this.scene=e,this.update(new o,o.Right(),o.Up(),o.Forward())}}update(e,s,t,r){this._xAxis.position.copyFrom(e),this._xAxis.setDirection(s),this._yAxis.position.copyFrom(e),this._yAxis.setDirection(t),this._zAxis.position.copyFrom(e),this._zAxis.setDirection(r)}createInstance(){const e=B._CreateArrowInstance(this.scene,this._xAxis),s=B._CreateArrowInstance(this.scene,this._yAxis),t=B._CreateArrowInstance(this.scene,this._zAxis),r=new P(this.scene,this.scaleLines,null,e,s,t);return r._instanced=!0,r}dispose(){this._xAxis&&this._xAxis.dispose(!1,!this._instanced),this._yAxis&&this._yAxis.dispose(!1,!this._instanced),this._zAxis&&this._zAxis.dispose(!1,!this._instanced),this.scene=null}static _SetRenderingGroupId(e,s){e.getChildMeshes().forEach(t=>{t.renderingGroupId=s})}}class ae extends P{constructor(e,s,t,r=1){super(e,r),this.pos=o.Zero(),this.xaxis=o.Zero(),this.yaxis=o.Zero(),this.zaxis=o.Zero(),this.mesh=t,this.bone=s}update(){if(!this.mesh||!this.bone)return;const e=this.bone;e.getAbsolutePositionToRef(this.mesh,this.pos),e.getDirectionToRef(N.X,this.mesh,this.xaxis),e.getDirectionToRef(N.Y,this.mesh,this.yaxis),e.getDirectionToRef(N.Z,this.mesh,this.zaxis),super.update(this.pos,this.xaxis,this.yaxis,this.zaxis)}dispose(){this.mesh&&(this.mesh=null,this.bone=null,super.dispose())}}class oe{constructor(e){if(this._impostors=[],this._meshes=[],this._bodies=[],this._inertiaBodies=[],this._constraints=[],this._bodyMeshes=[],this._inertiaMeshes=[],this._constraintMeshes=[],this._numMeshes=0,this._numBodies=0,this._numInertiaBodies=0,this._numConstraints=0,this._debugMeshMeshes=new Array,this._constraintAxesSize=.4,this._scene=e||k.LastCreatedScene,!this._scene)return;const s=this._scene.getPhysicsEngine();s&&(this._physicsEnginePlugin=s.getPhysicsPlugin()),this._utilityLayer=new H(this._scene,!1),this._utilityLayer.pickUtilitySceneFirst=!1,this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil=!0}_updateDebugMeshes(){const e=this._physicsEnginePlugin;(e==null?void 0:e.getPluginVersion())===1?this._updateDebugMeshesV1():this._updateDebugMeshesV2()}_updateDebugMeshesV1(){const e=this._physicsEnginePlugin;for(let s=0;s<this._numMeshes;s++){const t=this._impostors[s];if(t)if(t.isDisposed)this.hideImpostor(this._impostors[s--]);else{if(t.type===x.MeshImpostor)continue;const r=this._meshes[s];r&&e&&e.syncMeshWithImpostor(r,t)}}}_updateDebugMeshesV2(){const e=this._physicsEnginePlugin;for(let s=0;s<this._numBodies;s++){const t=this._bodies[s],r=this._bodyMeshes[s];t&&r&&e.syncTransform(t,r)}}_updateInertiaMeshes(){for(let e=0;e<this._numInertiaBodies;e++){const s=this._inertiaBodies[e],t=this._inertiaMeshes[e];s&&t&&this._updateDebugInertia(s,t)}}_updateDebugInertia(e,s){var a;const t=m.Identity(),r=m.Identity(),n=m.Identity();if(e._pluginDataInstances.length){const h=s,l=h._thinInstanceDataStorage.matrixData,_=e.transformNode._thinInstanceDataStorage.matrixData;for(let c=0;c<e._pluginDataInstances.length;c++){const u=e.getMassProperties(c);this._getMeshDebugInertiaMatrixToRef(u,t),m.FromArrayToRef(_,c*16,r),t.multiplyToRef(r,n),n.copyToArray(l,c*16)}h.thinInstanceBufferUpdated("matrix")}else{const h=e.getMassProperties();if(this._getMeshDebugInertiaMatrixToRef(h,t),(a=e.transformNode.rotationQuaternion)==null||a.toRotationMatrix(r),r.setTranslation(e.transformNode.position),e.transformNode.parent){const l=e.transformNode.parent.computeWorldMatrix(!0);r.multiplyToRef(l,r)}t.multiplyToRef(r,t),t.decomposeToTransformNode(s)}}_updateDebugConstraints(){for(let e=0;e<this._numConstraints;e++){const s=this._constraints[e],t=this._constraintMeshes[e];s&&t&&this._updateDebugConstraint(s,t)}}_makeScalingUnitInPlace(e){Math.abs(e.x-1)>z&&(e.x=1*Math.sign(e.x)),Math.abs(e.y-1)>z&&(e.y=1*Math.sign(e.y)),Math.abs(e.z-1)>z&&(e.z=1*Math.sign(e.z))}_updateDebugConstraint(e,s){if(!e._initOptions)return;const{pivotA:t,pivotB:r,axisA:n,axisB:a,perpAxisA:h,perpAxisB:l}=e._initOptions;!t||!r||!n||!a||!h||!l||s.getDescendants(!0).forEach(_=>{const c=_.getDescendants(!0)[0],u=_.getDescendants(!0)[1],{parentBody:g,parentBodyIndex:p}=c.metadata,{childBody:f,childBodyIndex:d}=u.metadata,b=this._getTransformFromBodyToRef(g,i.Matrix[0],p),C=this._getTransformFromBodyToRef(f,i.Matrix[1],d);b.decomposeToTransformNode(c),this._makeScalingUnitInPlace(c.scaling),C.decomposeToTransformNode(u),this._makeScalingUnitInPlace(u.scaling);const R=c.getDescendants(!0)[0];R.position.copyFrom(t);const D=u.getDescendants(!0)[0];D.position.copyFrom(r),V.FromRotationMatrixToRef(m.FromXYZAxesToRef(n,h,o.CrossToRef(n,h,i.Vector3[0]),i.Matrix[0]),R.rotationQuaternion),V.FromRotationMatrixToRef(m.FromXYZAxesToRef(a,l,o.CrossToRef(a,l,i.Vector3[1]),i.Matrix[1]),D.rotationQuaternion)})}showImpostor(e,s){if(!this._scene)return null;for(let r=0;r<this._numMeshes;r++)if(this._impostors[r]==e)return null;const t=this._getDebugMesh(e,s);return t&&(this._impostors[this._numMeshes]=e,this._meshes[this._numMeshes]=t,this._numMeshes===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numMeshes++),t}showBody(e){if(!this._scene)return null;for(let t=0;t<this._numBodies;t++)if(this._bodies[t]==e)return null;const s=this._getDebugBodyMesh(e);return s&&(this._bodies[this._numBodies]=e,this._bodyMeshes[this._numBodies]=s,this._numBodies===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numBodies++),s}showInertia(e){if(!this._scene)return null;for(let t=0;t<this._numInertiaBodies;t++)if(this._inertiaBodies[t]==e)return null;const s=this._getDebugInertiaMesh(e);return s&&(this._inertiaBodies[this._numInertiaBodies]=e,this._inertiaMeshes[this._numInertiaBodies]=s,this._numInertiaBodies===0&&(this._inertiaRenderFunction=()=>this._updateInertiaMeshes(),this._scene.registerBeforeRender(this._inertiaRenderFunction)),this._numInertiaBodies++),s}showConstraint(e){if(!this._scene)return null;for(let t=0;t<this._numConstraints;t++)if(this._constraints[t]==e)return null;const s=this._getDebugConstraintMesh(e);return s&&(this._constraints[this._numConstraints]=e,this._constraintMeshes[this._numConstraints]=s,this._numConstraints===0&&(this._constraintRenderFunction=()=>this._updateDebugConstraints(),this._scene.registerBeforeRender(this._constraintRenderFunction)),this._numConstraints++),s}hideImpostor(e){if(!e||!this._scene||!this._utilityLayer)return;let s=!1;const t=this._utilityLayer.utilityLayerScene;for(let r=0;r<this._numMeshes;r++)if(this._impostors[r]==e){const n=this._meshes[r];if(!n)continue;t.removeMesh(n),n.dispose();const a=this._debugMeshMeshes.indexOf(n);a>-1&&this._debugMeshMeshes.splice(a,1),this._numMeshes--,this._numMeshes>0?(this._meshes[r]=this._meshes[this._numMeshes],this._impostors[r]=this._impostors[this._numMeshes],this._meshes[this._numMeshes]=null,this._impostors[this._numMeshes]=null):(this._meshes[0]=null,this._impostors[0]=null),s=!0;break}s&&this._numMeshes===0&&this._scene.unregisterBeforeRender(this._renderFunction)}hideBody(e){if(!e||!this._scene||!this._utilityLayer)return;let s=!1;const t=this._utilityLayer.utilityLayerScene;for(let r=0;r<this._numBodies;r++)if(this._bodies[r]===e){const n=this._bodyMeshes[r];if(!n)continue;t.removeMesh(n),n.dispose(),this._numBodies--,this._numBodies>0?(this._bodyMeshes[r]=this._bodyMeshes[this._numBodies],this._bodies[r]=this._bodies[this._numBodies],this._bodyMeshes[this._numBodies]=null,this._bodies[this._numBodies]=null):(this._bodyMeshes[0]=null,this._bodies[0]=null),s=!0;break}s&&this._numBodies===0&&this._scene.unregisterBeforeRender(this._renderFunction)}hideInertia(e){if(!e||!this._scene||!this._utilityLayer)return;let s=!1;const t=this._utilityLayer.utilityLayerScene;for(let r=0;r<this._numInertiaBodies;r++)if(this._inertiaBodies[r]===e){const n=this._inertiaMeshes[r];if(!n)continue;t.removeMesh(n),n.dispose(),this._inertiaBodies.splice(r,1),this._inertiaMeshes.splice(r,1),this._numInertiaBodies--,s=!0;break}s&&this._numInertiaBodies===0&&this._scene.unregisterBeforeRender(this._inertiaRenderFunction)}hideConstraint(e){if(!e||!this._scene||!this._utilityLayer)return;let s=!1;const t=this._utilityLayer.utilityLayerScene;for(let r=0;r<this._numConstraints;r++)if(this._constraints[r]===e){const n=this._constraintMeshes[r];if(!n)continue;t.removeMesh(n),n.dispose(),this._constraints.splice(r,1),this._constraintMeshes.splice(r,1),this._numConstraints--,this._numConstraints>0?(this._constraints[r]=this._constraints[this._numConstraints],this._constraintMeshes[r]=this._constraintMeshes[this._numConstraints],this._constraints[this._numConstraints]=null,this._constraintMeshes[this._numConstraints]=null):(this._constraints[0]=null,this._constraintMeshes[0]=null),s=!0;break}s&&this._numConstraints===0&&this._scene.unregisterBeforeRender(this._constraintRenderFunction)}_getDebugMaterial(e){return this._debugMaterial||(this._debugMaterial=new L("",e),this._debugMaterial.wireframe=!0,this._debugMaterial.emissiveColor=y.White(),this._debugMaterial.disableLighting=!0),this._debugMaterial}_getDebugInertiaMaterial(e){return this._debugInertiaMaterial||(this._debugInertiaMaterial=new L("",e),this._debugInertiaMaterial.disableLighting=!0,this._debugInertiaMaterial.alpha=0),this._debugInertiaMaterial}_getDebugBoxMesh(e){return this._debugBoxMesh||(this._debugBoxMesh=K("physicsBodyBoxViewMesh",{size:1},e),this._debugBoxMesh.rotationQuaternion=V.Identity(),this._debugBoxMesh.material=this._getDebugMaterial(e),this._debugBoxMesh.setEnabled(!1)),this._debugBoxMesh.createInstance("physicsBodyBoxViewInstance")}_getDebugSphereMesh(e){return this._debugSphereMesh||(this._debugSphereMesh=J("physicsBodySphereViewMesh",{diameter:1},e),this._debugSphereMesh.rotationQuaternion=V.Identity(),this._debugSphereMesh.material=this._getDebugMaterial(e),this._debugSphereMesh.setEnabled(!1)),this._debugSphereMesh.createInstance("physicsBodySphereViewInstance")}_getDebugCapsuleMesh(e){return this._debugCapsuleMesh||(this._debugCapsuleMesh=$("physicsBodyCapsuleViewMesh",{height:1},e),this._debugCapsuleMesh.rotationQuaternion=V.Identity(),this._debugCapsuleMesh.material=this._getDebugMaterial(e),this._debugCapsuleMesh.setEnabled(!1)),this._debugCapsuleMesh.createInstance("physicsBodyCapsuleViewInstance")}_getDebugCylinderMesh(e){return this._debugCylinderMesh||(this._debugCylinderMesh=O("physicsBodyCylinderViewMesh",{diameterTop:1,diameterBottom:1,height:1},e),this._debugCylinderMesh.rotationQuaternion=V.Identity(),this._debugCylinderMesh.material=this._getDebugMaterial(e),this._debugCylinderMesh.setEnabled(!1)),this._debugCylinderMesh.createInstance("physicsBodyCylinderViewInstance")}_getDebugMeshMesh(e,s){const t=new T(e.name,s,null,e);return t.setParent(e),t.position=o.Zero(),t.material=this._getDebugMaterial(s),this._debugMeshMeshes.push(t),t}_getDebugMesh(e,s){if(!this._utilityLayer||s&&s.parent&&s.parent.physicsImpostor)return null;let t=null;const r=this._utilityLayer.utilityLayerScene;if(!e.physicsBody)return E.Warn("Unable to get physicsBody of impostor. It might be initialized later by its parent's impostor."),null;switch(e.type){case x.BoxImpostor:t=this._getDebugBoxMesh(r),e.getBoxSizeToRef(t.scaling);break;case x.SphereImpostor:{t=this._getDebugSphereMesh(r);const n=e.getRadius();t.scaling.x=n*2,t.scaling.y=n*2,t.scaling.z=n*2;break}case x.CapsuleImpostor:{t=this._getDebugCapsuleMesh(r);const n=e.object.getBoundingInfo();t.scaling.x=(n.boundingBox.maximum.x-n.boundingBox.minimum.x)*2*e.object.scaling.x,t.scaling.y=(n.boundingBox.maximum.y-n.boundingBox.minimum.y)*e.object.scaling.y,t.scaling.z=(n.boundingBox.maximum.z-n.boundingBox.minimum.z)*2*e.object.scaling.z;break}case x.MeshImpostor:s&&(t=this._getDebugMeshMesh(s,r));break;case x.NoImpostor:s?s.getChildMeshes().filter(a=>a.physicsImpostor?1:0).forEach(a=>{if(a.physicsImpostor&&a.getClassName()==="Mesh"){const h=a.getBoundingInfo(),l=h.boundingBox.minimum,_=h.boundingBox.maximum;switch(a.physicsImpostor.type){case x.BoxImpostor:t=this._getDebugBoxMesh(r),t.position.copyFrom(l),t.position.addInPlace(_),t.position.scaleInPlace(.5);break;case x.SphereImpostor:t=this._getDebugSphereMesh(r);break;case x.CylinderImpostor:t=this._getDebugCylinderMesh(r);break;default:t=null;break}t&&(t.scaling.x=_.x-l.x,t.scaling.y=_.y-l.y,t.scaling.z=_.z-l.z,t.parent=a)}}):E.Warn("No target mesh parameter provided for NoImpostor. Skipping."),t=null;break;case x.CylinderImpostor:{t=this._getDebugCylinderMesh(r);const n=e.object.getBoundingInfo();t.scaling.x=(n.boundingBox.maximum.x-n.boundingBox.minimum.x)*e.object.scaling.x,t.scaling.y=(n.boundingBox.maximum.y-n.boundingBox.minimum.y)*e.object.scaling.y,t.scaling.z=(n.boundingBox.maximum.z-n.boundingBox.minimum.z)*e.object.scaling.z;break}}return t}_getDebugBodyMesh(e){if(!this._utilityLayer)return null;const s=this._utilityLayer.utilityLayerScene,t=new T("custom",s),r=new G,n=e.getGeometry();if(r.positions=n.positions,r.indices=n.indices,r.applyToMesh(t),e._pluginDataInstances){const a=new Float32Array(e._pluginDataInstances.length*16);t.thinInstanceSetBuffer("matrix",a,16,!1)}return t.material=this._getDebugMaterial(s),t}_getMeshDebugInertiaMatrixToRef(e,s){const t=e.inertiaOrientation??V.Identity(),r=e.inertia??o.Zero(),n=e.centerOfMass??o.Zero(),a=(r.x-r.y+r.z)*6,h=Math.sqrt(Math.max(a,0)),l=r.x*12-a,_=Math.sqrt(Math.max(l,0)),c=r.z*12-a,u=Math.sqrt(Math.max(c,0)),g=i.Vector3[0];g.set(u,h,_);const p=m.ScalingToRef(g.x,g.y,g.z,i.Matrix[0]),f=t.toRotationMatrix(i.Matrix[1]),d=m.TranslationToRef(n.x,n.y,n.z,i.Matrix[2]);return p.multiplyToRef(f,s),s.multiplyToRef(d,s),s}_getDebugInertiaMesh(e){if(!this._utilityLayer)return null;const s=this._utilityLayer.utilityLayerScene,t=ee.CreateBox("custom",{size:1},s),r=m.Identity();if(e._pluginDataInstances.length){const n=new Float32Array(e._pluginDataInstances.length*16);for(let a=0;a<e._pluginDataInstances.length;++a){const h=e.getMassProperties(a);this._getMeshDebugInertiaMatrixToRef(h,r),r.copyToArray(n,a*16)}t.thinInstanceSetBuffer("matrix",n,16,!1)}else{const n=e.getMassProperties();this._getMeshDebugInertiaMatrixToRef(n,r),r.decomposeToTransformNode(t)}return t.enableEdgesRendering(),t.edgesWidth=2,t.edgesColor=new te(1,0,1,1),t.material=this._getDebugInertiaMaterial(s),t}_getTransformFromBodyToRef(e,s,t){const r=e.transformNode;return t&&t>=0?m.FromArrayToRef(r._thinInstanceDataStorage.matrixData,t,s):s.copyFrom(r.getWorldMatrix())}_getDebugConstraintMesh(e){if(!this._utilityLayer)return null;const s=this._utilityLayer.utilityLayerScene;if(!e._initOptions)return null;const{pivotA:t,pivotB:r,axisA:n,axisB:a,perpAxisA:h,perpAxisB:l}=e._initOptions;if(!t||!r||!n||!a||!h||!l)return null;const _=new T("parentingDebugConstraint",s),c=e.getBodiesUsingConstraint();for(const u of c){const g=new A("parentOfPair",s);g.parent=_;const{parentBody:p,parentBodyIndex:f,childBody:d,childBodyIndex:b}=u,C=this._getTransformFromBodyToRef(p,i.Matrix[0],f),R=this._getTransformFromBodyToRef(d,i.Matrix[1],b),D=new A("parentCoordSystem",s);D.parent=g,D.metadata={parentBody:p,parentBodyIndex:f},C.decomposeToTransformNode(D);const S=new A("childCoordSystem",s);S.parent=g,S.metadata={childBody:d,childBodyIndex:b},R.decomposeToTransformNode(S);const U=V.FromRotationMatrix(m.FromXYZAxesToRef(n,h,n.cross(h),i.Matrix[0])),Q=V.FromRotationMatrix(m.FromXYZAxesToRef(a,l,a.cross(l),i.Matrix[0])),W=t,j=r,w=new A("constraint_parent",s);w.position.copyFrom(W),w.rotationQuaternion=U,w.parent=D;const I=new A("constraint_child",s);I.parent=S,I.position.copyFrom(j),I.rotationQuaternion=Q;const F=new P(s,this._constraintAxesSize);F.xAxis.parent=w,F.yAxis.parent=w,F.zAxis.parent=w;const v=new P(s,this._constraintAxesSize);v.xAxis.parent=I,v.yAxis.parent=I,v.zAxis.parent=I}return _}dispose(){for(let e=this._numMeshes-1;e>=0;e--)this.hideImpostor(this._impostors[0]);for(let e=this._numBodies-1;e>=0;e--)this.hideBody(this._bodies[0]);for(let e=this._numInertiaBodies-1;e>=0;e--)this.hideInertia(this._inertiaBodies[0]);this._debugBoxMesh&&this._debugBoxMesh.dispose(),this._debugSphereMesh&&this._debugSphereMesh.dispose(),this._debugCylinderMesh&&this._debugCylinderMesh.dispose(),this._debugMaterial&&this._debugMaterial.dispose(),this._impostors.length=0,this._scene=null,this._physicsEnginePlugin=null,this._utilityLayer&&(this._utilityLayer.dispose(),this._utilityLayer=null)}}class he{get transparency(){return this._transparency}set transparency(e){this._transparency=e;for(let s=6;s<12;++s)this._lightHelperFrustumMeshes[s].material.alpha=e}get showLines(){return this._showLines}set showLines(e){if(this._showLines!==e){this._showLines=e;for(let s=0;s<6;++s)this._lightHelperFrustumMeshes[s].setEnabled(e)}}get showPlanes(){return this._showPlanes}set showPlanes(e){if(this._showPlanes!==e){this._showPlanes=e;for(let s=6;s<12;++s)this._lightHelperFrustumMeshes[s].setEnabled(e)}}constructor(e,s){this._oldPosition=new o(Number.NaN,Number.NaN,Number.NaN),this._oldDirection=new o(Number.NaN,Number.NaN,Number.NaN),this._transparency=.3,this._showLines=!0,this._showPlanes=!0,this._scene=e.getScene(),this._light=e,this._camera=s,this._inverseViewMatrix=m.Identity(),this._lightHelperFrustumMeshes=[],this._createGeometry(),this.show(),this.update()}show(){this._lightHelperFrustumMeshes.forEach((e,s)=>{e.setEnabled(s<6&&this._showLines||s>=6&&this._showPlanes)}),this._oldPosition.set(Number.NaN,Number.NaN,Number.NaN),this._visible=!0}hide(){this._lightHelperFrustumMeshes.forEach(e=>{e.setEnabled(!1)}),this._visible=!1}update(){var s,t,r,n,a,h;if(!this._visible||this._oldPosition.equals(this._light.position)&&this._oldDirection.equals(this._light.direction)&&this._oldAutoCalc===this._light.autoCalcShadowZBounds&&this._oldMinZ===this._light.shadowMinZ&&this._oldMaxZ===this._light.shadowMaxZ)return;this._oldPosition.copyFrom(this._light.position),this._oldDirection.copyFrom(this._light.direction),this._oldAutoCalc=this._light.autoCalcShadowZBounds,this._oldMinZ=this._light.shadowMinZ,this._oldMaxZ=this._light.shadowMaxZ,i.Vector3[0].set(this._light.orthoLeft,this._light.orthoBottom,this._light.shadowMinZ!==void 0?this._light.shadowMinZ:this._camera.minZ),i.Vector3[1].set(this._light.orthoRight,this._light.orthoTop,this._light.shadowMaxZ!==void 0?this._light.shadowMaxZ:this._camera.maxZ);const e=this._getInvertViewMatrix();i.Vector3[2].copyFromFloats(i.Vector3[1].x,i.Vector3[1].y,i.Vector3[0].z),i.Vector3[3].copyFromFloats(i.Vector3[1].x,i.Vector3[0].y,i.Vector3[0].z),i.Vector3[4].copyFromFloats(i.Vector3[0].x,i.Vector3[0].y,i.Vector3[0].z),i.Vector3[5].copyFromFloats(i.Vector3[0].x,i.Vector3[1].y,i.Vector3[0].z),o.TransformCoordinatesToRef(i.Vector3[2],e,i.Vector3[2]),o.TransformCoordinatesToRef(i.Vector3[3],e,i.Vector3[3]),o.TransformCoordinatesToRef(i.Vector3[4],e,i.Vector3[4]),o.TransformCoordinatesToRef(i.Vector3[5],e,i.Vector3[5]),i.Vector3[6].copyFromFloats(i.Vector3[1].x,i.Vector3[1].y,i.Vector3[1].z),i.Vector3[7].copyFromFloats(i.Vector3[1].x,i.Vector3[0].y,i.Vector3[1].z),i.Vector3[8].copyFromFloats(i.Vector3[0].x,i.Vector3[0].y,i.Vector3[1].z),i.Vector3[9].copyFromFloats(i.Vector3[0].x,i.Vector3[1].y,i.Vector3[1].z),o.TransformCoordinatesToRef(i.Vector3[6],e,i.Vector3[6]),o.TransformCoordinatesToRef(i.Vector3[7],e,i.Vector3[7]),o.TransformCoordinatesToRef(i.Vector3[8],e,i.Vector3[8]),o.TransformCoordinatesToRef(i.Vector3[9],e,i.Vector3[9]),M("nearlines",{updatable:!0,points:this._nearLinesPoints,instance:this._lightHelperFrustumMeshes[0]},this._scene),M("farlines",{updatable:!0,points:this._farLinesPoints,instance:this._lightHelperFrustumMeshes[1]},this._scene),M("trlines",{updatable:!0,points:this._trLinesPoints,instance:this._lightHelperFrustumMeshes[2]},this._scene),M("brlines",{updatable:!0,points:this._brLinesPoints,instance:this._lightHelperFrustumMeshes[3]},this._scene),M("tllines",{updatable:!0,points:this._tlLinesPoints,instance:this._lightHelperFrustumMeshes[4]},this._scene),M("bllines",{updatable:!0,points:this._blLinesPoints,instance:this._lightHelperFrustumMeshes[5]},this._scene),i.Vector3[2].toArray(this._nearPlaneVertices,0),i.Vector3[3].toArray(this._nearPlaneVertices,3),i.Vector3[4].toArray(this._nearPlaneVertices,6),i.Vector3[5].toArray(this._nearPlaneVertices,9),(s=this._lightHelperFrustumMeshes[6].geometry)==null||s.updateVerticesDataDirectly("position",this._nearPlaneVertices,0),i.Vector3[6].toArray(this._farPlaneVertices,0),i.Vector3[7].toArray(this._farPlaneVertices,3),i.Vector3[8].toArray(this._farPlaneVertices,6),i.Vector3[9].toArray(this._farPlaneVertices,9),(t=this._lightHelperFrustumMeshes[7].geometry)==null||t.updateVerticesDataDirectly("position",this._farPlaneVertices,0),i.Vector3[2].toArray(this._rightPlaneVertices,0),i.Vector3[6].toArray(this._rightPlaneVertices,3),i.Vector3[7].toArray(this._rightPlaneVertices,6),i.Vector3[3].toArray(this._rightPlaneVertices,9),(r=this._lightHelperFrustumMeshes[8].geometry)==null||r.updateVerticesDataDirectly("position",this._rightPlaneVertices,0),i.Vector3[5].toArray(this._leftPlaneVertices,0),i.Vector3[9].toArray(this._leftPlaneVertices,3),i.Vector3[8].toArray(this._leftPlaneVertices,6),i.Vector3[4].toArray(this._leftPlaneVertices,9),(n=this._lightHelperFrustumMeshes[9].geometry)==null||n.updateVerticesDataDirectly("position",this._leftPlaneVertices,0),i.Vector3[2].toArray(this._topPlaneVertices,0),i.Vector3[6].toArray(this._topPlaneVertices,3),i.Vector3[9].toArray(this._topPlaneVertices,6),i.Vector3[5].toArray(this._topPlaneVertices,9),(a=this._lightHelperFrustumMeshes[10].geometry)==null||a.updateVerticesDataDirectly("position",this._topPlaneVertices,0),i.Vector3[3].toArray(this._bottomPlaneVertices,0),i.Vector3[7].toArray(this._bottomPlaneVertices,3),i.Vector3[8].toArray(this._bottomPlaneVertices,6),i.Vector3[4].toArray(this._bottomPlaneVertices,9),(h=this._lightHelperFrustumMeshes[11].geometry)==null||h.updateVerticesDataDirectly("position",this._bottomPlaneVertices,0)}dispose(){this._lightHelperFrustumMeshes.forEach(e=>{var s;(s=e.material)==null||s.dispose(),e.dispose()}),this._rootNode.dispose()}_createGeometry(){this._rootNode=new A("directionalLightHelperRoot_"+this._light.name,this._scene),this._rootNode.parent=this._light.parent,this._nearLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly];const e=M("nearlines",{updatable:!0,points:this._nearLinesPoints},this._scene);e.parent=this._rootNode,e.alwaysSelectAsActiveMesh=!0,this._farLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly,o.ZeroReadOnly];const s=M("farlines",{updatable:!0,points:this._farLinesPoints},this._scene);s.parent=this._rootNode,s.alwaysSelectAsActiveMesh=!0,this._trLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly];const t=M("trlines",{updatable:!0,points:this._trLinesPoints},this._scene);t.parent=this._rootNode,t.alwaysSelectAsActiveMesh=!0,this._brLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly];const r=M("brlines",{updatable:!0,points:this._brLinesPoints},this._scene);r.parent=this._rootNode,r.alwaysSelectAsActiveMesh=!0,this._tlLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly];const n=M("tllines",{updatable:!0,points:this._tlLinesPoints},this._scene);n.parent=this._rootNode,n.alwaysSelectAsActiveMesh=!0,this._blLinesPoints=[o.ZeroReadOnly,o.ZeroReadOnly];const a=M("bllines",{updatable:!0,points:this._blLinesPoints},this._scene);a.parent=this._rootNode,a.alwaysSelectAsActiveMesh=!0,this._lightHelperFrustumMeshes.push(e,s,t,r,n,a);const h=(l,_,c)=>{const u=new T(l+"plane",this._scene),g=new L(l+"PlaneMat",this._scene);u.material=g,u.parent=this._rootNode,u.alwaysSelectAsActiveMesh=!0,g.emissiveColor=_,g.alpha=this.transparency,g.backFaceCulling=!1,g.disableLighting=!0;const p=[0,1,2,0,2,3],f=new G;f.positions=c,f.indices=p,f.applyToMesh(u,!0),this._lightHelperFrustumMeshes.push(u)};this._nearPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._farPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._rightPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._leftPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._topPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._bottomPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],h("near",new y(1,0,0),this._nearPlaneVertices),h("far",new y(.3,0,0),this._farPlaneVertices),h("right",new y(0,1,0),this._rightPlaneVertices),h("left",new y(0,.3,0),this._leftPlaneVertices),h("top",new y(0,0,1),this._topPlaneVertices),h("bottom",new y(0,0,.3),this._bottomPlaneVertices),this._nearLinesPoints[0]=i.Vector3[2],this._nearLinesPoints[1]=i.Vector3[3],this._nearLinesPoints[2]=i.Vector3[4],this._nearLinesPoints[3]=i.Vector3[5],this._nearLinesPoints[4]=i.Vector3[2],this._farLinesPoints[0]=i.Vector3[6],this._farLinesPoints[1]=i.Vector3[7],this._farLinesPoints[2]=i.Vector3[8],this._farLinesPoints[3]=i.Vector3[9],this._farLinesPoints[4]=i.Vector3[6],this._trLinesPoints[0]=i.Vector3[2],this._trLinesPoints[1]=i.Vector3[6],this._brLinesPoints[0]=i.Vector3[3],this._brLinesPoints[1]=i.Vector3[7],this._tlLinesPoints[0]=i.Vector3[4],this._tlLinesPoints[1]=i.Vector3[8],this._blLinesPoints[0]=i.Vector3[5],this._blLinesPoints[1]=i.Vector3[9]}_getInvertViewMatrix(){return m.LookAtLHToRef(this._light.position,this._light.position.add(this._light.direction),o.UpReadOnly,this._inverseViewMatrix),this._inverseViewMatrix.invertToRef(this._inverseViewMatrix),this._inverseViewMatrix}}const ce=Object.freeze(Object.defineProperty({__proto__:null,AxesViewer:P,BoneAxesViewer:ae,DebugLayer:ie,get DebugLayerTab(){return se},DirectionalLightFrustumViewer:he,PhysicsViewer:oe,RayHelper:re,SkeletonViewer:ne},Symbol.toStringTag,{value:"Module"}));export{B as A,ae as B,he as D,oe as P,P as a,ce as i};
